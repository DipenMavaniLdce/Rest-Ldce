{"version":3,"sources":["Components/AdminPanel/ApproveCertificate.js"],"names":["connect","state","role","User","credentials","props","useState","documents","setDocuments","approveDocument","setApproveDocument","certificate","setCertificate","src","setSrc","loading","setLoading","useEffect","a","Axios","get","then","res","data","catch","err","console","log","print","content","document","getElementById","pri","contentWindow","open","write","innerHTML","close","focus","setTimeout","className","length","admin","renderDocTable","onClick","disabled","title","style","display","id","map","d","key","request_id","height","width","position","renderPrintBtn"],"mappings":"yOA+HeA,uBAJS,SAACC,GACvB,MAAO,CAAEC,KAAMD,EAAME,KAAKC,YAAYF,QAGzBF,EArHf,SAA4BK,GAAQ,IAAD,EACCC,qBADD,mBAC1BC,EAD0B,KACfC,EADe,OAEaF,mBAAS,IAFtB,mBAE1BG,EAF0B,KAETC,EAFS,OAGKJ,qBAHL,mBAG1BK,EAH0B,KAGbC,EAHa,OAIXN,qBAJW,mBAI1BO,EAJ0B,KAIrBC,EAJqB,OAKHR,oBAAS,GALN,mBAK1BS,EAL0B,KAKjBC,EALiB,KAMjCC,qBAAU,eAGVA,qBAAU,WACR,sBAAC,sBAAAC,EAAA,6DACCF,GAAW,GADZ,SAEOG,IAAMC,IAAI,8BACbC,MAAK,SAACC,GACLd,EAAac,EAAIC,SAGlBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAP/B,OAQCT,GAAW,GARZ,0CAAD,KAUC,IAEH,IAAMY,EAAQ,WACZ,IAAMC,EAAUC,SAASC,eAAe,aAClCC,EAAMF,SAASC,eAAe,qBAAqBE,cACzDD,EAAIF,SAASI,OACbF,EAAIF,SAASK,MAAMN,EAAQO,WAC3BJ,EAAIF,SAASO,QACbL,EAAIM,QACJC,YAAW,WACTP,EAAIJ,UACH,MAgEL,OACE,yBAAKY,UAAU,wBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACZzB,EACC,kBAAC,IAAD,MAEE,oCApEW,WACrB,GAAKR,EACL,OAAyB,IAArBA,EAAUkC,OACL,wBAAID,UAAU,eAAd,mCAIP,oCACE,kBAAC,IAAD,CACEjC,UAAWA,EACXC,aAAcA,EACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBgC,MAAOrC,EAAMH,KACbU,eAAgBA,EAChBE,OAAQA,IAEV,kBAAC,IAAD,CAAkBS,KAAMZ,IACxB,kBAAC,IAAD,CAAeE,IAAKA,KAmDX8B,GA9CQ,WACrB,GAAmB,gBAAftC,EAAMH,KAEV,OACE,yBAAKsC,UAAU,eACb,4BACEA,UAAU,yBACVI,QAAShB,EACTiB,SAAqC,IAA3BpC,EAAgBgC,OAC1BK,MAC6B,IAA3BrC,EAAgBgC,OACZ,yCACA,SAPR,kCAYA,yBAAKM,MAAO,CAAEC,QAAS,SACrB,yBAAKC,GAAG,aACLxC,GACCA,EAAgByC,KAAI,SAACC,GAAD,OAClB,kBAAC,IAAD,CAAaC,IAAKD,EAAEE,WAAY9B,KAAM4B,SAI9C,4BACEF,GAAG,oBACHH,MAAM,gBACNC,MAAO,CACLO,OAAQ,MACRC,MAAO,MACPC,SAAU,eAgBLC","file":"static/js/10.f74520ba.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport DocsApprove from \"./DocsApprove\";\nimport DocumentModel from \"./DocumentModel\";\nimport CertificateModel from \"./CertificateModel\";\nimport Loading from \"../../Util/Loading\";\nimport { connect } from \"react-redux\";\nimport Certificate from \"../Certificate/Certificate\";\n\nfunction ApproveCertificate(props) {\n  const [documents, setDocuments] = useState();\n  const [approveDocument, setApproveDocument] = useState([]);\n  const [certificate, setCertificate] = useState();\n  const [src, setSrc] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n\n  })\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      await Axios.get(\"/api/admin/pendingDocument\")\n        .then((res) => {\n          setDocuments(res.data);\n\n        })\n        .catch((err) => console.log(err));\n      setLoading(false);\n    })();\n  }, []);\n\n  const print = () => {\n    const content = document.getElementById(\"printArea\");\n    const pri = document.getElementById(\"ifmContentToPrint\").contentWindow;\n    pri.document.open();\n    pri.document.write(content.innerHTML);\n    pri.document.close();\n    pri.focus();\n    setTimeout(() => {\n      pri.print();\n    }, 500);\n  };\n\n  const renderDocTable = () => {\n    if (!documents) return;\n    if (documents.length === 0) {\n      return <h1 className=\"text-center\">No Documents Left For Approval!</h1>;\n    }\n\n    return (\n      <>\n        <DocsApprove\n          documents={documents}\n          setDocuments={setDocuments}\n          approveDocument={approveDocument}\n          setApproveDocument={setApproveDocument}\n          admin={props.role}\n          setCertificate={setCertificate}\n          setSrc={setSrc}\n        />\n        <CertificateModel data={certificate} />\n        <DocumentModel src={src} />\n      </>\n    );\n  };\n\n  const renderPrintBtn = () => {\n    if (props.role !== \"ROLE_SSHEAD\") return;\n\n    return (\n      <div className=\"text-center\">\n        <button\n          className=\"btn btn-success btn-lg\"\n          onClick={print}\n          disabled={approveDocument.length === 0}\n          title={\n            approveDocument.length === 0\n              ? \"First Approve atleast one Certificate!\"\n              : \"Print\"\n          }\n        >\n          Print All Approved Certificate\n        </button>\n        <div style={{ display: \"none\" }}>\n          <div id=\"printArea\">\n            {approveDocument &&\n              approveDocument.map((d) => (\n                <Certificate key={d.request_id} data={d} />\n              ))}\n          </div>\n        </div>\n        <iframe\n          id=\"ifmContentToPrint\"\n          title=\"printer_frame\"\n          style={{\n            height: \"0px\",\n            width: \"0px\",\n            position: \"absolute\",\n          }}\n        />\n      </div>\n    );\n  };\n \n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <div className=\"col\">\n          {loading ? (\n            <Loading />\n          ) : (\n              <>\n                {renderDocTable()}\n                {renderPrintBtn()}\n              </>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { role: state.User.credentials.role };\n};\n\nexport default connect(mapStateToProps)(ApproveCertificate);\n"],"sourceRoot":""}