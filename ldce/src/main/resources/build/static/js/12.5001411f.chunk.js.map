{"version":3,"sources":["Components/ForgotPassword/ForgotPassword.js"],"names":["ForgotPasswordForm","reduxForm","form","initialValues","type","validate","values","errors","username","props","UI","loading","success","successMessage","useState","label","setLabel","placeholder","setPlaceholder","forgotPasswordAction","maskEmail","setMaskEmail","useEffect","email","str","finalArr","len","split","indexOf","forEach","item","pos","push","join","onSubmit","a","formData","FormData","Object","keys","field","index","append","className","id","handleSubmit","name","component","selectInput","options","Student","Admin","onChange","e","target","value","console","log","textInput","require","error","class","style","textAlign","connect","state"],"mappings":"yNA6GA,IAeMA,EAAqBC,YAAU,CACnCC,KAAM,iBACNC,cAAe,CAAEC,KAAM,WACvBC,SAlBe,SAACC,GAChB,IAAMC,EAAS,GAOf,OANKD,EAAOF,OACVG,EAAOH,KAAO,sBAEXE,EAAOE,WACVD,EAAOC,SAAW,yBAEbD,IAOkBN,EArH3B,SAAwBQ,GAAQ,IAAD,EACwBA,EAAMC,GAAnDC,EADqB,EACrBA,QAASJ,EADY,EACZA,OAAQK,EADI,EACJA,QAASC,EADL,EACKA,eADL,EAEHC,mBAAS,kBAFN,mBAEtBC,EAFsB,KAEfC,EAFe,OAGSF,mBAAS,+BAHlB,mBAGtBG,EAHsB,KAGTC,EAHS,KAIrBC,EAAyBV,EAAzBU,qBAJqB,EAKKL,mBAAS,MALd,mBAKtBM,EALsB,KAKXC,EALW,KAM7BC,qBAAU,WACR,GAAIT,EAAeU,MAAO,CACxB,IAAIC,EAAMX,EAAeU,MACrBE,EAAW,GAEXC,GADJF,EAAMA,EAAIG,MAAM,KACFC,QAAQ,KACtBJ,EAAIK,SAAQ,SAACC,EAAMC,GACjBA,GAAO,GAAKA,GAAOL,EAAM,EACrBD,EAASO,KAAK,KACdP,EAASO,KAAKR,EAAIO,OAExBV,EAAaI,EAASQ,KAAK,QAE5B,CAACpB,IACJ,IAYMqB,EAAQ,uCAAG,WAAO5B,GAAP,eAAA6B,EAAA,6DACTC,EAAW,IAAIC,SACrBC,OAAOC,KAAKjC,GAAQuB,SAAQ,SAACW,EAAOC,GAClCL,EAASM,OAAOF,EAAOlC,EAAOkC,OAHjB,SAKTrB,EAAqBiB,GALZ,2CAAH,sDAUd,OACE,yBAAKO,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qCACb,0BACEC,GAAG,iBACHD,UAAU,UACVT,SAAUzB,EAAMoC,aAAaX,IAE7B,wBAAIS,UAAU,0BAAd,kBACA,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEG,KAAK,OACL/B,MAAM,QACNE,YAAY,cACZ8B,UAAWC,IACXC,QAAS,CACPC,QAAS,UACTC,MAAO,SAETC,SA1CO,SAACC,GAEP,UADAA,EAAEC,OAAOC,OAEpBrC,EAAe,oBACfF,EAAS,oBAETE,EAAe,+BACfF,EAAS,mBAEXwC,QAAQC,IAAIJ,OAoCJ,yBAAKV,UAAU,cACb,kBAAC,IAAD,CACEvC,KAAK,OACL0C,KAAK,WACL/B,MAAOA,EACPE,YAAaA,EACb8B,UAAWW,IACXC,SAAO,KAGX,yBAAKhB,UAAU,0BACb,4BAAQvC,KAAK,SAASuC,UAAU,mBAAhC,YAIW,IAAZhC,EACC,kBAAC,IAAD,MAEEJ,EAAOqD,OACL,yBAAKC,MAAM,qBAAqBC,MAAO,CAAEC,UAAW,WAApD,sBAKLnD,GACC,yBAAKiD,MAAM,sBAAsBC,MAAO,CAAEC,UAAW,WACnD,uEACClD,EAAeU,OAASH,UA+B1B4C,uBAVS,SAACC,GAAD,MAAY,CAClCvD,GAAIuD,EAAMvD,MAS4B,CAAES,0BAA3B6C,CACbhE","file":"static/js/12.5001411f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loading from \"../../Util/Loading\";\nimport { connect } from \"react-redux\";\nimport { forgotPasswordAction } from \"../../redux/actions/userAction\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { selectInput, textInput } from \"../ReduxForm/form\";\n\nfunction ForgotPassword(props) {\n  const { loading, errors, success, successMessage } = props.UI;\n  const [label, setLabel] = useState(\"Enrollment No:\");\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\n  const { forgotPasswordAction } = props;\n  const [maskEmail, setMaskEmail] = useState(null);\n  useEffect(() => {\n    if (successMessage.email) {\n      let str = successMessage.email;\n      let finalArr = [];\n      str = str.split(\"\");\n      let len = str.indexOf(\"@\");\n      str.forEach((item, pos) => {\n        pos >= 2 && pos <= len - 3\n          ? finalArr.push(\"*\")\n          : finalArr.push(str[pos]);\n      });\n      setMaskEmail(finalArr.join(\"\"));\n    }\n  }, [successMessage]);\n  const onRoleChange = (e) => {\n    const type = e.target.value;\n    if (type === \"ADMIN\") {\n      setPlaceholder(\"Enter Your Id...\");\n      setLabel(\"Department Id:\");\n    } else {\n      setPlaceholder(\"Enter Your Enrollment No...\");\n      setLabel(\"Enrollment No:\");\n    }\n    console.log(e);\n  };\n\n  const onSubmit = async (values) => {\n    const formData = new FormData();\n    Object.keys(values).forEach((field, index) => {\n      formData.append(field, values[field]);\n    });\n    await forgotPasswordAction(formData);\n\n    // history.pushState('/login')\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\n          <form\n            id=\"forgotPassword\"\n            className=\"regForm\"\n            onSubmit={props.handleSubmit(onSubmit)}\n          >\n            <h2 className=\"form-title text-center\">ForgotPassword</h2>\n            <div className=\"form-group\">\n              <Field\n                name=\"type\"\n                label=\"Role:\"\n                placeholder=\"Select Role\"\n                component={selectInput}\n                options={{\n                  Student: \"STUDENT\",\n                  Admin: \"ADMIN\",\n                }}\n                onChange={onRoleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                name=\"username\"\n                label={label}\n                placeholder={placeholder}\n                component={textInput}\n                require\n              />\n            </div>\n            <div className=\"form-group text-center\">\n              <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n            {loading === true ? (\n              <Loading />\n            ) : (\n                errors.error && (\n                  <div class=\"alert alert-danger\" style={{ textAlign: \"center\" }}>\n                    Username Not Found\n                  </div>\n                )\n              )}\n            {success && (\n              <div class=\"alert alert-success\" style={{ textAlign: \"center\" }}>\n                <p>username and password sent to this email</p>\n                {successMessage.email && maskEmail}\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.type) {\n    errors.type = \"Please Select Role\";\n  }\n  if (!values.username) {\n    errors.username = \"Please Enter Username\";\n  }\n  return errors;\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nconst ForgotPasswordForm = reduxForm({\n  form: \"forgotPassword\",\n  initialValues: { type: \"STUDENT\" },\n  validate,\n})(ForgotPassword);\n\nexport default connect(mapStateToProps, { forgotPasswordAction })(\n  ForgotPasswordForm\n);\n"],"sourceRoot":""}