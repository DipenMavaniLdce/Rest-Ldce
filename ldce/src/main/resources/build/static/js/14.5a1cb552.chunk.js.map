{"version":3,"sources":["Components/Registration/AdminFormValidate.js","Components/Registration/AdminForm.js","Components/Registration/AdminRegisterForm.js"],"names":["validate","values","errors","ADMIN_FIELDS","forEach","field","fieldName","replace","value","match","nameRegex","emailRegex","contactRegex","passwordRegex","password","addLineRegex","cityRegex","pinRegex","AdminRegistrationForm","reduxForm","form","onSubmitFail","scrollToFirstError","props","dispatch","useDispatch","handleSubmit","isUpdate","UI","loading","success","successMessage","useState","BRANCH","setBRANCH","useEffect","type","CLEAR_ERRORS","onCourseChange","target","initialValues","course","e","BRANCH_BE","BRANCH_PDDC","BRANCH_PG","onSubmit","className","Field","name","label","placeholder","component","textInput","require","selectInput","options","GENDER","data-live-search","ADMIN_ROLE","BRANCH_YEAR","COURSE","onChange","maxLength","minLength","htmlFor","color","COUNTRY","min","max","BLOOD_GROOP","ImageInput","default","message","Loading","error","class","style","textAlign","connect","state","AdminRegisterForm","formData","FormData","Object","keys","index","append","RegisterAdmin","history","this","Component"],"mappings":"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","file":"static/js/14.5a1cb552.chunk.js","sourcesContent":["import { ADMIN_FIELDS } from \"./data\";\nimport {\n  nameRegex,\n  emailRegex,\n  contactRegex,\n  passwordRegex,\n  addLineRegex,\n  cityRegex,\n  pinRegex,\n} from \"../ReduxForm/Regex\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  ADMIN_FIELDS.forEach((field) => {\n    const fieldName = field.replace(/_/g, \" \");\n    const value = values[field];\n\n    if (!value) {\n      errors[field] = `${fieldName} is required`;\n    } else\n      switch (field) {\n        case \"first_name\":\n        case \"middle_name\":\n        case \"last_name\":\n          if (!value.match(nameRegex)) {\n            errors[field] = `Please enter your valid ${fieldName}.`;\n          }\n          break;\n        case \"email\":\n          if (!value.match(emailRegex)) {\n            errors[field] = `Please enter your valid ${fieldName}.`;\n          }\n          break;\n        case \"contact\":\n          if (!value.match(contactRegex)) {\n            errors[field] = `Please enter your valid Mobile Number.`;\n          }\n          break;\n        case \"password\":\n          if (!value.match(passwordRegex)) {\n            errors[field] = `<div id=\"repassword\">\n                            <span>Password must contain the following:</span>\n                            <p>A <b>lowercase</b> letter.</p>\n                            <p>A <b>UPPERCASE</b> letter.</p>\n                            <p>A <b>number (0-9)</b>.</p>\n                            <p>A <b>special (!@#$%^&*) characters</b>.</p>\n                            <p>Password length between <b>8-32 characters</b>.</p>\n                          </div>`;\n          }\n          break;\n        case \"confirm_password\":\n          if (value !== values.password) {\n            errors[field] = `Password doesn't match.`;\n          }\n          break;\n        case \"re_add_l1\":\n        case \"re_add_l2\":\n          if (!value.match(addLineRegex)) {\n            errors[field] = `Enter valid address line.`;\n          }\n          break;\n        case \"re_add_city\":\n        case \"re_add_state\":\n          if (!value.match(cityRegex)) {\n            errors[field] = `Enter valid name.`;\n          }\n          break;\n        case \"re_add_pin_code\":\n          if (!value.match(pinRegex)) {\n            errors[field] = `Check your Pin-Code.`;\n          }\n          break;\n        default:\n          break;\n      }\n  });\n  return errors;\n};\n\nexport default validate;\n","import React, { useState, useEffect } from \"react\";\nimport { connect,useDispatch } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Loading from \"../../Util/Loading\";\nimport {\n  textInput,\n  selectInput,\n  ImageInput,\n  scrollToFirstError,\n} from \"../ReduxForm/form\";\nimport {\n  GENDER,\n  ADMIN_ROLE,\n  BRANCH_YEAR,\n  COUNTRY,\n  BLOOD_GROOP,\n  BRANCH_BE,\n  BRANCH_PDDC,\n  BRANCH_PG,\n  COURSE\n} from \"./data\";\nimport { CLEAR_ERRORS } from \"../../redux/type\"\nimport validate from \"./AdminFormValidate\";\n\nconst AdminForm = (props) => {\n  const dispatch = useDispatch();\n  const { handleSubmit, isUpdate } = props;\n  const { loading, errors, success, successMessage } = props.UI;\n  const [BRANCH, setBRANCH] = useState({ \"Please Select Course First\": \"\" });\n\n  useEffect(() => {\n\n    return () => {\n      dispatch({\n        type: CLEAR_ERRORS\n      })\n    }\n  }, [])\n  useEffect(() => {\n    if (isUpdate) {\n      onCourseChange({ target: { value: props.initialValues.course } });\n    }\n  }, [props.initialValues]);\n\n  const onCourseChange = (e) => {\n    switch (e.target.value) {\n      case \"BE\":\n        setBRANCH(BRANCH_BE);\n        break;\n      case \"PDDC\":\n        setBRANCH(BRANCH_PDDC);\n        break;\n      case \"PG\":\n        setBRANCH(BRANCH_PG);\n        break;\n      default:\n        setBRANCH({ \"Please Select Course First\": \"\" });\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <Field\n          type=\"text\"\n          name=\"faculty_id\"\n          label=\"Faculty Id:\"\n          placeholder=\"Enter your faculty Id\"\n          component={textInput}\n          require\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <div className=\"form-group\">\n            <Field\n              type=\"text\"\n              name=\"first_name\"\n              label=\"First Name:\"\n              placeholder=\"Enter First Name\"\n              component={textInput}\n              require\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-4\">\n          <div className=\"form-group\">\n            <Field\n              type=\"text\"\n              name=\"middle_name\"\n              label=\"Middle Name:\"\n              placeholder=\"Enter Middle Name\"\n              component={textInput}\n              require\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-4\">\n          <div className=\"form-group\">\n            <Field\n              type=\"text\"\n              name=\"last_name\"\n              label=\"Last Name:\"\n              placeholder=\"Enter Last Name\"\n              component={textInput}\n              require\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"gender\"\n              label=\"Gender:\"\n              placeholder=\"Select Gender\"\n              component={selectInput}\n              options={GENDER}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"role\"\n              label=\"Role:\"\n              placeholder=\"Select Role\"\n              component={selectInput}\n              options={ADMIN_ROLE}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              type=\"text\"\n              name=\"designation\"\n              label=\"Designation:\"\n              placeholder=\"Enter Designation\"\n              component={textInput}\n              require\n                />\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"branch_year\"\n              label=\"Branch Year:\"\n              placeholder=\"Select Branch year\"\n              component={selectInput}\n              options={BRANCH_YEAR}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n        \n        \n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"course\"\n              label=\"Course:\"\n              placeholder=\"Select Course\"\n              component={selectInput}\n              options={COURSE}\n              onChange={onCourseChange}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"branch\"\n              label=\"Branch:\"\n              placeholder=\"Select Branch\"\n              component={selectInput}\n              options={BRANCH}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n      </div>\n\n      \n      <div className=\"form-group\">\n        <Field\n          type=\"email\"\n          name=\"email\"\n          label=\"Email Id:\"\n          placeholder=\"Enter Email Id\"\n          component={textInput}\n          require\n        />\n      </div>\n      <div className=\"form-group\">\n        <Field\n          type=\"number\"\n          name=\"contact\"\n          label=\"Contact No:\"\n          placeholder=\"Enter Contact Number\"\n          component={textInput}\n          maxLength=\"10\"\n          require\n        />\n      </div>\n      <div className=\"form-group\">\n        <Field\n          type=\"password\"\n          name=\"password\"\n          label=\"Password:\"\n          placeholder=\"Enter Password\"\n          component={textInput}\n          minLength=\"8\"\n          maxLength=\"32\"\n          require\n        />\n      </div>\n      <div className=\"form-group\">\n        <Field\n          type=\"password\"\n          name=\"confirm_password\"\n          label=\"Confirm Password:\"\n          placeholder=\"Confirm Password\"\n          component={textInput}\n          minLength=\"8\"\n          maxLength=\"32\"\n          require\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"resident_address\">\n          Resident Address: <font color=\"red\">*</font>\n        </label>\n\n        <Field\n          type=\"text\"\n          name=\"re_add_l1\"\n          component={textInput}\n          className=\"form-control mt-3\"\n          placeholder=\"Address Line 1\"\n        />\n        <Field\n          type=\"text\"\n          name=\"re_add_l2\"\n          component={textInput}\n          className=\"form-control mt-1\"\n          placeholder=\"Address Line 2\"\n        />\n        <Field\n          type=\"text\"\n          name=\"re_add_city\"\n          component={textInput}\n          className=\"form-control mt-1\"\n          placeholder=\"City\"\n        />\n        <Field\n          type=\"text\"\n          name=\"re_add_state\"\n          component={textInput}\n          className=\"form-control mt-1\"\n          placeholder=\"State\"\n        />\n        <Field\n          type=\"number\"\n          name=\"re_add_pin_code\"\n          component={textInput}\n          className=\"form-control mt-1\"\n          placeholder=\"Postal Code\"\n        />\n\n        <Field\n          name=\"re_add_country\"\n          placeholder=\"Select Country\"\n          className=\"form-control mt-1\"\n          component={selectInput}\n          options={COUNTRY}\n          data-live-search=\"on\"\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              type=\"date\"\n              name=\"date_of_birth\"\n              label=\"Date of Birth:\"\n              component={textInput}\n              min=\"1900-01-01\"\n              max=\"2000-12-31\"\n              require\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"form-group\">\n            <Field\n              name=\"blood_group\"\n              label=\"Blood Group:\"\n              placeholder=\"Select Blood Group\"\n              component={selectInput}\n              options={BLOOD_GROOP}\n              data-live-search=\"on\"\n              require\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-6 text-center\">\n          <div className=\"form-group\">\n            <Field\n              name=\"photo\"\n              placeholder=\"Add Photo\"\n              component={ImageInput}\n              default=\"/static/images/photo.jpg\"\n              message=\"Max Size 500KB.\"\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-6 mt-lg-5 text-center\">\n          <div className=\"form-group\">\n            <Field\n              name=\"sign\"\n              placeholder=\"Add Sign\"\n              component={ImageInput}\n              default=\"/static/images/sign.jpg\"\n              message=\"Sign only on white page. Max Size 500KB.\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"form-group mt-3 text-center\">\n        <button type=\"submit\" className=\"btn btn-success\">\n          Submit\n        </button>\n      </div>\n      {loading === true ? (\n        <Loading />\n      ) : (\n          errors.error && (\n            <div class=\"alert alert-danger\" style={{ textAlign: \"center\" }}>\n              {errors.error && errors.error}\n            </div>\n          )\n        )}\n      {success && (\n        <div class=\"alert alert-success\" style={{ textAlign: \"center\" }}>\n          {successMessage.message && successMessage.message}\n        </div>\n      )}\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nconst AdminRegistrationForm = reduxForm({\n                              form: \"AdminForm\",\n                              validate: validate,\n                              onSubmitFail: scrollToFirstError,\n                            })(AdminForm);\n\n\nexport default connect(mapStateToProps)(AdminRegistrationForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AdminForm from \"./AdminForm\";\nimport { RegisterAdmin } from \"../../redux/actions/userAction\";\n\nclass AdminRegisterForm extends Component {\n  handleSubmit = (values) => {\n    //converting to multi-part form data\n    const formData = new FormData();\n    Object.keys(values).forEach((field, index) => {\n      if (field === \"photo\" || field === \"sign\") {\n        formData.append(field, values[field], values[field].name);\n      } else {\n        formData.append(field, values[field]);\n      }\n    });\n    //passed history 'cause after success full registration it redirect to login page\n    this.props.RegisterAdmin(formData, this.props.history);\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-7 mx-auto mt-5\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <AdminForm onSubmit={this.handleSubmit} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { RegisterAdmin })(AdminRegisterForm);\n"],"sourceRoot":""}