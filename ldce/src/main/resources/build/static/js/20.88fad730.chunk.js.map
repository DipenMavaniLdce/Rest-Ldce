{"version":3,"sources":["Components/ReduxForm/form.js","Components/ForgotPassword/ForgotPassword.js"],"names":["textInput","formField","input","meta","params","className","getClassName","renderLabel","label","name","id","renderError","touched","error","hasError","selectInput","options","value","disabled","hidden","placeholder","renderOption","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","ImageInput","state","lableImg","onFileChange","e","a","props","target","files","test","type","setState","size","val","onChange","this","src","default","alt","accept","style","left","message","React","Component","htmlFor","require","required","color","dangerouslySetInnerHTML","__html","Object","keys","map","key","scrollToFirstError","el","document","querySelector","focus","position","getBoundingClientRect","top","documentElement","scrollTop","window","scrollTo","behavior","ForgotPasswordForm","reduxForm","form","initialValues","validate","values","errors","username","UI","loading","success","successMessage","useState","setLabel","setPlaceholder","forgotPasswordAction","maskEmail","setMaskEmail","useEffect","email","str","finalArr","len","split","indexOf","forEach","item","pos","push","join","onSubmit","formData","FormData","field","index","append","handleSubmit","component","Student","Admin","console","log","class","textAlign","connect"],"mappings":"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","file":"static/js/20.88fad730.chunk.js","sourcesContent":["import React from 'react';\n\nexport const textInput = (formField) => {\n  const { input, meta, ...params } = formField;\n  const className = getClassName(meta, params.className);\n  return (\n    <>\n      {renderLabel(params.label, input.name, params)}\n      <input className={className} {...input} id={input.name} {...params} />\n      {renderError(meta)}\n    </>\n  );\n};\n\nconst getClassName = ({ touched, error }, className = 'form-control') => {\n  const hasError = touched && error;\n  if (hasError) {\n    className += ' error';\n  }\n  return className;\n};\n\nexport const selectInput = (formField) => {\n  const { input, meta, options, ...params } = formField;\n  const className = getClassName(meta, params.className);\n  return (\n    <>\n      {renderLabel(params.label, input.name, params)}\n      <select className={className} {...input} id={input.name} {...params}>\n        <option value=\"\" disabled hidden>\n          {params.placeholder}\n        </option>\n        {renderOption(options)}\n      </select>\n      {renderError(meta)}\n    </>\n  );\n};\n\nexport const getBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\nexport class ImageInput extends React.Component {\n  state = { error: '', lableImg: null };\n\n  onFileChange = async (e) => {\n    const { input } = this.props;\n    const file = e.target.files[0];\n    var error = '';\n    if (file) {\n      if (!/^image/.test(file.type)) {\n        error = `Only jpg,jpeg,png file type allow.`;\n        this.setState({ error });\n        return false;\n      } else if (file.size > 512000) {\n        error = `File size must not exceed 500 KB.`;\n        this.setState({ error });\n        return false;\n      }\n      this.setState({ error });\n      const val = await getBase64(file);\n      //for lable value of input image i'have change state\n      this.setState({\n        ...this.state,\n        lableImg: val,\n      });\n      //this is onother change for setting form data 'cause backend Excepting multipar-form data\n      input.onChange(file);\n    } else {\n      input.onChange(null);\n    }\n  };\n\n  render() {\n    const { input, meta, ...params } = this.props;\n    const { error } = this.state;\n\n    return (\n      <>\n        <label>\n          <img\n            src={this.state.lableImg || params.default}\n            className={params.className || `upload-${input.name}`}\n            alt=\"Student Img\"\n          />\n          <span className=\"btn btn-primary btn-lg btn-block mx-auto\">\n            {params.placeholder}\n          </span>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            className=\"form-control invisible position-absolute\"\n            style={{ left: '0' }}\n            id={input.name}\n            onChange={this.onFileChange}\n          />\n          {renderError(meta)}\n          {error && <label className=\"error\">{error}</label>}\n        </label>\n        <p>{params.message}</p>\n      </>\n    );\n  }\n}\n\nconst renderLabel = (label, htmlFor, { require, required }) => {\n  return (\n    label && (\n      <label htmlFor={htmlFor}>\n        {label} {(required || require) && <font color=\"red\">*</font>}\n      </label>\n    )\n  );\n};\n\nconst renderError = ({ touched, error }) => {\n  return (\n    touched &&\n    error && (\n      <label\n        className=\"error\"\n        dangerouslySetInnerHTML={{ __html: error }}\n      ></label>\n    )\n  );\n};\n\nconst renderOption = (options) => {\n  return Object.keys(options).map((key) => (\n    <option key={options[key]} value={options[key]}>\n      {key}\n    </option>\n  ));\n};\n\nexport const scrollToFirstError = () => {\n  const el = document.querySelector('input.error');\n  if (el) {\n    el.focus();\n    const position =\n      el.getBoundingClientRect().top + document.documentElement.scrollTop;\n    const offset = 50;\n    window.scrollTo({ top: position - offset, behavior: 'smooth' });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"../../Util/Loading\";\nimport { connect } from \"react-redux\";\nimport { forgotPasswordAction } from \"../../redux/actions/userAction\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { selectInput, textInput } from \"../ReduxForm/form\";\n\nfunction ForgotPassword(props) {\n  const { loading, errors, success, successMessage } = props.UI;\n  const [label, setLabel] = useState(\"Enrollment No:\");\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\n  const { forgotPasswordAction } = props;\n  const [maskEmail, setMaskEmail] = useState(null);\n  useEffect(() => {\n    if (successMessage.email) {\n      let str = successMessage.email;\n      let finalArr = [];\n      str = str.split(\"\");\n      let len = str.indexOf(\"@\");\n      str.forEach((item, pos) => {\n        pos >= 2 && pos <= len - 3\n          ? finalArr.push(\"*\")\n          : finalArr.push(str[pos]);\n      });\n      setMaskEmail(finalArr.join(\"\"));\n    }\n  }, [successMessage]);\n  const onRoleChange = (e) => {\n    const type = e.target.value;\n    if (type === \"ADMIN\") {\n      setPlaceholder(\"Enter Your Id...\");\n      setLabel(\"Department Id:\");\n    } else {\n      setPlaceholder(\"Enter Your Enrollment No...\");\n      setLabel(\"Enrollment No:\");\n    }\n    console.log(e);\n  };\n\n  const onSubmit = async (values) => {\n    const formData = new FormData();\n    Object.keys(values).forEach((field, index) => {\n      formData.append(field, values[field]);\n    });\n    await forgotPasswordAction(formData);\n\n    // history.pushState('/login')\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\n          <form\n            id=\"forgotPassword\"\n            className=\"regForm\"\n            onSubmit={props.handleSubmit(onSubmit)}\n          >\n            <h2 className=\"form-title text-center\">ForgotPassword</h2>\n            <div className=\"form-group\">\n              <Field\n                name=\"type\"\n                label=\"Role:\"\n                placeholder=\"Select Role\"\n                component={selectInput}\n                options={{\n                  Student: \"STUDENT\",\n                  Admin: \"ADMIN\",\n                }}\n                onChange={onRoleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                name=\"username\"\n                label={label}\n                placeholder={placeholder}\n                component={textInput}\n                require\n              />\n            </div>\n            <div className=\"form-group text-center\">\n              <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n            {loading === true ? (\n              <Loading />\n            ) : (\n                errors.error && (\n                  <div class=\"alert alert-danger\" style={{ textAlign: \"center\" }}>\n                    Username Not Found\n                  </div>\n                )\n              )}\n            {success && (\n              <div class=\"alert alert-success\" style={{ textAlign: \"center\" }}>\n                <p>username and password sent to this email</p>\n                {successMessage.email && maskEmail}\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.type) {\n    errors.type = \"Please Select Role\";\n  }\n  if (!values.username) {\n    errors.username = \"Please Enter Username\";\n  }\n  return errors;\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nconst ForgotPasswordForm = reduxForm({\n  form: \"forgotPassword\",\n  initialValues: { type: \"STUDENT\" },\n  validate,\n})(ForgotPassword);\n\nexport default connect(mapStateToProps, { forgotPasswordAction })(\n  ForgotPasswordForm\n);\n"],"sourceRoot":""}