{"version":3,"sources":["Components/Login/login.js"],"names":["LoginForm","reduxForm","form","initialValues","type","validate","values","errors","username","password","props","loginUser","history","UI","loading","useState","label","setLabel","placeholder","setPlaceholder","className","id","onSubmit","handleSubmit","error","string","style","textAlign","name","component","selectInput","options","Student","Admin","onChange","e","target","value","console","log","textInput","require","to","connect","state"],"mappings":"sOAyGA,IAkBMA,EAAYC,YAAU,CAC1BC,KAAM,YACNC,cAAe,CAAEC,KAAM,WACvBC,SArBe,SAACC,GAChB,IAAMC,EAAS,GAUf,OATKD,EAAOF,OACVG,EAAOH,KAAO,sBAEXE,EAAOE,WACVD,EAAOC,SAAW,yBAEfF,EAAOG,WACVF,EAAOE,SAAW,yBAEbF,IAOSN,EAjHlB,SAAeS,GAAQ,IACbC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QADC,EAEQF,EAAMG,GAA1BC,EAFY,EAEZA,QAASP,EAFG,EAEHA,OAFG,EAGMQ,mBAAS,kBAHf,mBAGbC,EAHa,KAGNC,EAHM,OAIkBF,mBAAS,+BAJ3B,mBAIbG,EAJa,KAIAC,EAJA,KAsBpB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qCACb,0BACEC,GAAG,YACHD,UAAU,UACVE,SAAUZ,EAAMa,cAXT,SAACjB,GAChBK,EAAUL,EAAQM,OAYV,wBAAIQ,UAAU,0BAAd,UAEEb,EAAOiB,OAASjB,EAAOkB,SACvB,yBACEL,UAAU,6BACVM,MAAO,CAAEC,UAAW,UACpBN,GAAG,iBAEH,wDAGJ,yBAAKD,UAAU,cACb,kBAAC,IAAD,CACEQ,KAAK,OACLZ,MAAM,QACNE,YAAY,cACZW,UAAWC,IACXC,QAAS,CACPC,QAAS,UACTC,MAAO,SAETC,SA9CO,SAACC,GAEP,UADAA,EAAEC,OAAOC,OAEpBlB,EAAe,oBACfF,EAAS,oBAETE,EAAe,+BACfF,EAAS,mBAEXqB,QAAQC,IAAIJ,OAwCJ,yBAAKf,UAAU,cACb,kBAAC,IAAD,CACEhB,KAAK,OACLwB,KAAK,WACLZ,MAAOA,EACPE,YAAaA,EACbW,UAAWW,IACXC,QAAQ,UAGZ,yBAAKrB,UAAU,cACb,kBAAC,IAAD,CACEhB,KAAK,WACLwB,KAAK,WACLZ,MAAM,YACNE,YAAY,kBACZW,UAAWW,IACXC,QAAQ,UAGZ,yBAAKrB,UAAU,cACb,kBAAC,IAAD,CAAMsB,GAAG,kBAAT,qBAGF,yBAAKtB,UAAU,0BACZN,EACC,kBAAC,IAAD,MAEA,4BAAQV,KAAK,SAASgB,UAAU,mBAAhC,iBAoCDuB,uBAVS,SAACC,GAAD,MAAY,CAClC/B,GAAI+B,EAAM/B,MAS4B,CAAEF,eAA3BgC,CAAwC3C","file":"static/js/9.377b7e35.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./login.css\";\nimport Loading from \"../../Util/Loading\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/userAction\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { selectInput, textInput } from \"../ReduxForm/form\";\n\n\nfunction Login(props) {\n  const { loginUser, history } = props;\n  const { loading, errors } = props.UI;\n  const [label, setLabel] = useState(\"Enrollment No:\");\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\n\n  const onRoleChange = (e) => {\n    const type = e.target.value;\n    if (type === \"ADMIN\") {\n      setPlaceholder(\"Enter Your Id...\");\n      setLabel(\"Department Id:\");\n    } else {\n      setPlaceholder(\"Enter Your Enrollment No...\");\n      setLabel(\"Enrollment No:\");\n    }\n    console.log(e);\n  };\n\n  const onSubmit = (values) => {\n    loginUser(values, history);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\n          <form\n            id=\"loginForm\"\n            className=\"regForm\"\n            onSubmit={props.handleSubmit(onSubmit)}\n          >\n            <h2 className=\"form-title text-center\">Login</h2>\n\n            {(errors.error || errors.string) && (\n              <div\n                className=\"comment alert alert-danger\"\n                style={{ textAlign: \"center\" }}\n                id=\"error_message\"\n              >\n                <strong>Invalid Credentials</strong>\n              </div>\n            )}\n            <div className=\"form-group\">\n              <Field\n                name=\"type\"\n                label=\"Role:\"\n                placeholder=\"Select Role\"\n                component={selectInput}\n                options={{\n                  Student: \"STUDENT\",\n                  Admin: \"ADMIN\",\n                }}\n                onChange={onRoleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                name=\"username\"\n                label={label}\n                placeholder={placeholder}\n                component={textInput}\n                require=\"true\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"password\"\n                name=\"password\"\n                label=\"Password:\"\n                placeholder=\"Enter Password.\"\n                component={textInput}\n                require=\"true\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <Link to=\"forgotPassword\">Forgot Password?</Link>\n            </div>\n\n            <div className=\"form-group text-center\">\n              {loading ? (\n                <Loading></Loading>\n              ) : (\n                <button type=\"submit\" className=\"btn btn-success\">\n                  Login\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.type) {\n    errors.type = \"Please Select Role\";\n  }\n  if (!values.username) {\n    errors.username = \"Please Enter Username\";\n  }\n  if (!values.password) {\n    errors.password = \"Please Enter Password\";\n  }\n  return errors;\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nconst LoginForm = reduxForm({\n  form: \"loginForm\",\n  initialValues: { type: \"STUDENT\" },\n  validate,\n})(Login);\n\nexport default connect(mapStateToProps, { loginUser })(LoginForm);\n"],"sourceRoot":""}